vaxx_data_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/"
vaxx_data_path <- paste0(vaxx_data_path, "SPH-COVID Response/Jules/Cases_WWregions_forKevin/extras/Covid_Vaccine_Coverage_by_County.csv")
vaxx <- read.csv(vaxx_data_path)
vaxx <- filter(vaxx, Person.s.Residence.in.County %in% counties_of_interest)
vaxx <- vaxx %>% group_by(Person.s.Residence.in.County, Administration.Level, Week.Ending.Date) %>% summarize(pop = sum(X2019.Census.MI.Population..12.years.and.Older., na.rm = TRUE),
doses = sum(Number.of.Doses, na.rm = TRUE))
colnames(vaxx) <- c("County", "Admin", "Date", "Population", "Doses")
vaxx$Date <- as.POSIXct(vaxx$Date, format = "%m/%d/%Y")
vaxx <- vaxx %>% arrange(County, Date)
vaxx2 <- reshape2::dcast(vaxx, County + Date + Population ~ Admin, value.var = c("Doses"))
vaxx2 <- vaxx2 %>% group_by(County) %>% arrange(Date) %>% mutate(CompletionRollingSum = cumsum(Completion),
InitiationRollingSum = cumsum(Initiation))
vaxx2$CompletionPercent <- (vaxx2$CompletionRollingSum / vaxx2$Population) * 100
vaxx2$InitiationPercent <- (vaxx2$InitiationRollingSum / vaxx2$Population) * 100
vaxx2 <- filter(vaxx2, County %in% counties_of_interest)
### fill in dates
days <- seq(min(as_date(vaxx2$Date)), max(as_date(vaxx2$Date)), by='days')
days_2 <- c(days, days, days, days, days)
con1 <- rep("Washtenaw", length(days))
con2 <- rep("Wayne", length(days))
con3 <- rep("Jackson", length(days))
con4 <- rep("Genesee", length(days))
con5 <- rep("Lenawee", length(days))
county_2 <- c(con1, con2, con3, con4, con5)
day_df <- data.frame(Date = days_2, County = county_2)
day_df$Date <- as_date(day_df$Date)
vaxx2$Date <- as_date(vaxx2$Date)
vaxx2 <- merge(vaxx2, day_df, by = c("Date", "County"), all = TRUE)
vaxx2 <- vaxx2 %>% group_by(County) %>% arrange(County, Date) %>% fill(everything(), .direction = c("down"))
booster_in <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/Cases_WWregions_forKevin/extras/paper_github/main_paper/03_combination_case_ww_data/vaccination_data/compiled_boosters.csv")
booster_in$file_pull_date <- as.POSIXct(booster_in$file_pull_date, format = "%Y-%m-%d")
booster_in$file_pull_date <- as_date(booster_in$file_pull_date)
vaxx3 <- merge(vaxx2, booster_in, by.x = c("County", "Date"), by.y = c("person_county", "file_pull_date"), all = TRUE)
vaxx3 <- vaxx3 %>% group_by(County) %>% arrange(County, Date) %>% fill(booster_total, .direction = c("down"))
vaxx3 <- vaxx3 %>% arrange(County, Date)
vaxx3$BoosterPercent <- (vaxx3$booster_total / vaxx3$Population) * 100
case_and_ww <- filter(case_ww, Case_Status == "Confirmed" & variable == "N1")
colnames(case_and_ww)
m_case_and_ww <- m_case_and_ww %>% select(Date, city, value, seven_day_rolling_average,
count, seven_day_avg, population, seven_day_average_100k, variant_timeline)
m_case_and_ww <- filter(case_ww, Case_Status == "Confirmed" & variable == "N1")
m_case_and_ww <- m_case_and_ww %>% select(Date, city, value, seven_day_rolling_average,
count, seven_day_avg, population, seven_day_average_100k, variant_timeline)
table(m_case_and_ww$city)
m_case_and_ww <- m_case_and_ww %>% mutate(County = case_when(city == "Ann Arbor Catchment" ~ "Washtenaw",
city == "Flint Catchment" ~ "Genesee",
city == "Jackson Catchment" ~ "Jackson",
city == "Tecumseh Catchment" ~ "Lenawee",
T ~ "None"))
colnames(vaxx3)
m_cwt <- merge(m_case_and_ww, vaxx3, by = c("County", "Date"), all.x = TRUE, all.y = FALSE)
View(m_cwt)
m_case_and_ww$Date <- as.character(m_case_and_ww$Date)
vaxx3$Date <- as.character(vaxx3$Date)
m_cwt <- merge(m_case_and_ww, vaxx3, by = c("County", "Date"), all.x = TRUE, all.y = FALSE)
colnames(all_testing)
mcwtv <- merge(m_cwt, all_testing, by.x = c("County", "Date"), by.y = c("Geography", "MessageDate"), all.x = TRUE, all.y = FALSE)
View(mcwtv)
View(all_testing)
all_testing$MessageDate <- as.character(all_testing$MessageDate)
mcwtv <- merge(m_cwt, all_testing, by.x = c("County", "Date"), by.y = c("Geography", "MessageDate"), all.x = TRUE, all.y = FALSE)
mcwtv$BoosterPercent[is.na(mcwtv$BoosterPercent)] <- 0
mcwtv$booster_total[is.na(mcwtv$booster_total)] <- 0
colnames(mcwtv)
library(tidyverse)
library(lubridate)
library(ggpubr)
library(AICcmodavg)
model_var_cors <- cor(mcwtv[, c(4, 5, 6, 7, 9, 16, 17, 19, 21, 22, 23, 25, 26)], use = "complete.obs")
model_var_cors <- melt(model_var_cors)
model_var_cors <- reshape2::melt(model_var_cors)
ggplot(model_var_cors, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_gradient(low="#FFFFFF",  high="#4B88A2") +
geom_text(aes(x = Var1, y = Var2, label = round(value, 3)), inherit.aes = FALSE) +
labs(title = "Additional Correlations",
x = "",
y = "",
fill = "")
dataDate <- as_date("2022-09-27")
testing_data <- readxl::read_xlsx(paste0("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Data - SEOC/SEOC Testing Results ",format(dataDate,"%Y%m%d"),".xlsx"), sheet = "With Corrections")
testing_data2 <- readxl::read_xlsx(paste0("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Data - SEOC/SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"), sheet = "With Corrections")
# (ann arbor, flint, jackson, tecumseh, ycua = wayne + washtenaw)
counties_of_interest <- c("Washtenaw", "Genesee", "Jackson", "Lenawee", "Wayne")
testing_data <- filter(testing_data, Geography %in% counties_of_interest)
testing_data2 <- filter(testing_data2, Geography %in% counties_of_interest)
# calculate negative tests per 100K population
testing_data <- filter(testing_data) %>% group_by(Geography, MessageDate, Population2018) %>% summarize(NegativeTests = sum(NegativeTests, na.rm = TRUE),
PositiveTests = sum(PositiveTests, na.rm = TRUE))
testing_data2 <- filter(testing_data2) %>% group_by(Geography, MessageDate, Population2018) %>% summarize(NegativeTests = sum(NegativeTests, na.rm = TRUE),
PositiveTests = sum(PositiveTests, na.rm = TRUE))
### regular tests
testing_data <- testing_data %>% group_by(Geography) %>% arrange(as_date(MessageDate)) %>% mutate(rolling_sum_negative_tests = zoo::rollsum(NegativeTests, k = 7, fill = NA, align = "right"),
rolling_sum_positive_tests = zoo::rollsum(PositiveTests, k = 7, fill = NA, align = "right"))
testing_data$rolling_average_daily_negative_tests <- testing_data$rolling_sum_negative_tests / 7
testing_data$rolling_average_daily_positive_tests <- testing_data$rolling_sum_positive_tests / 7
### antigen tests
testing_data2 <- testing_data2 %>% group_by(Geography) %>% arrange(as_date(MessageDate)) %>% mutate(rolling_sum_negative_tests = zoo::rollsum(NegativeTests, k = 7, fill = NA, align = "right"),
rolling_sum_positive_tests = zoo::rollsum(PositiveTests, k = 7, fill = NA, align = "right"))
testing_data2$rolling_average_daily_negative_tests <- testing_data2$rolling_sum_negative_tests / 7
testing_data2$rolling_average_daily_positive_tests <- testing_data2$rolling_sum_positive_tests / 7
colnames(testing_data)
colnames(testing_data2)
colnames(testing_data2) <- c("Geography", "MessageDate", "Population2018", "AntigenNegativeTests","AntigenPositiveTests", "Antigen_rolling_sum_negative", "Antigen_rolling_sum_positive", "Antigen_rolling_average_negative", "Antigen_rolling_average_positive")
all_testing <- merge(testing_data, testing_data2, by = c("Geography", "MessageDate", "Population2018"), all = TRUE)
View(all_testing)
#all_testing <- all_testing %>% select(Geography, MessageDate, Population2018, NegativeTests, AntigenNegativeTests)
all_testing$TotalNegative <- all_testing$NegativeTests + all_testing$AntigenNegativeTests
all_testing <- all_testing %>% group_by(Geography) %>% arrange(as_date(MessageDate)) %>% mutate(rolling_sum_negative_tests = zoo::rollsum(TotalNegative, k = 7, fill = NA, align = "right"))
all_testing$rolling_average_daily_negative_tests <- all_testing$rolling_sum_negative_tests / 7
all_testing$rolling_average_daily_negative_tests_pop_adjust <- (all_testing$rolling_average_daily_negative_tests / all_testing$Population2018) * 100000
all_testing$rolling_average_negativepositive_ratio_pcr <- all_testing$rolling_average_daily_negative_tests / all_testing$rolling_average_daily_positive_tests
all_testing$MessageDate <- as.character(all_testing$MessageDate)
mcwtv <- merge(m_cwt, all_testing, by.x = c("County", "Date"), by.y = c("Geography", "MessageDate"), all.x = TRUE, all.y = FALSE)
mcwtv$BoosterPercent[is.na(mcwtv$BoosterPercent)] <- 0
mcwtv$booster_total[is.na(mcwtv$booster_total)] <- 0
colnames(mcwtv)
model_var_cors <- cor(mcwtv[, 4:35], use = "complete.obs")
model_var_cors <- cor(mcwtv[, c(4, 5, 6, 7, 9, 16, 17, 19, 25, 26, 31, 32, 34, 35)], use = "complete.obs")
model_var_cors <- reshape2::melt(model_var_cors)
ggplot(model_var_cors, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_gradient(low="#FFFFFF",  high="#4B88A2") +
geom_text(aes(x = Var1, y = Var2, label = round(value, 3)), inherit.aes = FALSE) +
labs(title = "Additional Correlations",
x = "",
y = "",
fill = "")
colnames(mcwtv)
model6 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model6)
model7 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent +
rolling_average_daily_negative_tests_pop_adjust +
rolling_average_negativepositive_ratio_pcr + city, data = mcwtv)
summary(model7)
#define list of models
models <- list( model6, model7)
#specify model names
mod.names <- c(c('without_city',
'with_city'))
#calculate AIC of each model
aictab(cand.set = models, modnames = mod.names)
model6 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
model5 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model5)
model6 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model6)
model7 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent +
rolling_average_daily_negative_tests_pop_adjust +
rolling_average_negativepositive_ratio_pcr + city, data = mcwtv)
summary(model7)
#specify model names
mod.names <- c(c('without_city_no_initiation', 'without_city',
'with_city'))
#calculate AIC of each model
aictab(cand.set = models, modnames = mod.names)
#define list of models
models <- list(model5, model6, model7)
#specify model names
mod.names <- c(c('without_city_no_initiation', 'without_city',
'with_city'))
#calculate AIC of each model
aictab(cand.set = models, modnames = mod.names)
model4 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model4)
model3 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust, data = mcwtv)
summary(model3)
model4 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model4)
model5 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model5)
model6 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model6)
model7 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent +
rolling_average_daily_negative_tests_pop_adjust +
rolling_average_negativepositive_ratio_pcr + city, data = mcwtv)
summary(model7)
#define list of models
models <- list(model3, model4, model5, model6, model7)
#specify model names
mod.names <- c(c('without_city_tests', 'without_city_testratio', 'without_city_no_initiation', 'without_city',
'with_city'))
#calculate AIC of each model
aictab(cand.set = models, modnames = mod.names)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point()
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
scale_fill_gradient(low = "white", high = "black") +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
scale_color_gradient(low = "white", high = "black") +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
scale_color_gradient(low = "orange", high = "purple") +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
scale_color_gradient(low = "white", high = "black", na.value = "green") +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_negativepositive_ratio_pcr)) +
geom_point() +
scale_color_gradient(low = "white", high = "black", na.value = "dodgerblue") +
facet_wrap(.~city)
ggplot(mcwtv, aes(x = as_date(Date), y = seven_day_average_100k, color = rolling_average_daily_negative_tests_pop_adjust)) +
geom_point() +
scale_color_gradient(low = "white", high = "black", na.value = "dodgerblue") +
facet_wrap(.~city)
model3 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust, data = mcwtv)
summary(model3)
model4 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
InitiationPercent + CompletionPercent + BoosterPercent + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model4)
model5 <- lm(seven_day_average_100k ~ seven_day_rolling_average + variant_timeline +
CompletionPercent + BoosterPercent + rolling_average_daily_negative_tests_pop_adjust + rolling_average_negativepositive_ratio_pcr, data = mcwtv)
summary(model5)
# read in full sc2 file
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
seq_list <- read.csv(paste0(starting_path, "SEQUENCING/SARSCOV2/4_SequenceSampleMetadata/FinalSummary/full_compiled_data.csv"), colClasses = "character")
library(tidyverse)
library(lubridate)
# filter to RVTN
all_rvtn <- filter(seq_list, "RVTN" %in% received_source)
# filter to RVTN
all_rvtn <- filter(seq_list, received_source == "RVTN")
all_rvtn <- all_rvtn %>% select(sample_id, subject_id, gisaid_strain)
View(all_rvtn)
all_rvtn$household <- aubstr(all_rvtn$subject_id, 2, 4)
all_rvtn$household <- substr(all_rvtn$subject_id, 2, 4)
write.csv(all_rvtn, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/RVTN_Households")
write.csv(all_rvtn, "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/RVTN_Households/rvtn_samples.csv", row.names = TRUE, na = "")
shiny::runApp('C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/variant_ivyic')
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
colnames(variant_data)
View(variant_data2)
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220815.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- reference_info %>% arrange(as_date(coll_date)) %>% mutate(dayssince = as_date(coll_date) - lag(as_date(coll_date), default = first(as_date(coll_date))))
var_file <- merge(variant_data, reference_info, by.x = c("sample"), by.y = c("aliquot_id"), all.x = TRUE)
var_file <- filter(var_file, !is.na(sample) & sample != "")
var_file2 <- var_file %>% group_by(study_id) %>% summarize(i = length(unique(sample)))
var_file <- merge(var_file, var_file2, by = c("study_id"))
table(var_file$i)
View(var_file2)
library(shiny)
library(lubridate)
library(tidyverse)
library(nationalparkcolors)
library(reshape2)
library(ggrepel)
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
AAmutation <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100_AAmutation.csv")
AAmutation <- filter(AAmutation, !grepl("MHM", sample) & !grepl("Illumina", sample))
AAmutation <- AAmutation %>% select(sample, POS, AA_mutation)
#variant_data <- merge(variant_data, AAmutation, by = c("sample", "POS"), all.x = TRUE) %>% distinct()
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- reference_info %>% arrange(as_date(coll_date)) %>% mutate(dayssince = as_date(coll_date) - lag(as_date(coll_date), default = first(as_date(coll_date))))
var_file <- merge(variant_data, reference_info, by.x = c("sample"), by.y = c("aliquot_id"), all.x = TRUE)
var_file <- filter(var_file, !is.na(sample) & sample != "")
var_file2 <- var_file %>% group_by(study_id) %>% summarize(i = length(unique(sample)))
var_file <- merge(var_file, var_file2, by = c("study_id"))
View(var_file2)
library(shiny)
library(lubridate)
library(tidyverse)
library(nationalparkcolors)
library(reshape2)
library(ggrepel)
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
AAmutation <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100_AAmutation.csv")
AAmutation <- filter(AAmutation, !grepl("MHM", sample) & !grepl("Illumina", sample))
AAmutation <- AAmutation %>% select(sample, POS, AA_mutation)
#variant_data <- merge(variant_data, AAmutation, by = c("sample", "POS"), all.x = TRUE) %>% distinct()
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- reference_info %>% arrange(as_date(coll_date)) %>% mutate(dayssince = as_date(coll_date) - lag(as_date(coll_date), default = first(as_date(coll_date))))
var_file <- merge(variant_data, reference_info, by.x = c("sample"), by.y = c("aliquot_id"), all.x = TRUE)
View(var_file)
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
length(unique(reference_info$study_id))
reference_info3 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220830.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- rbind(reference_info, reference_info2, reference_info3) %>% distinct()
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info2 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220905.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info3 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220830.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info2 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220908.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- rbind(reference_info, reference_info2, reference_info3) %>% distinct()
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
runApp('C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/variant_ivyic')
library(shiny)
library(lubridate)
library(tidyverse)
library(nationalparkcolors)
library(reshape2)
library(ggrepel)
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
AAmutation <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100_AAmutation.csv")
AAmutation <- filter(AAmutation, !grepl("MHM", sample) & !grepl("Illumina", sample))
AAmutation <- AAmutation %>% select(sample, POS, AA_mutation)
#variant_data <- merge(variant_data, AAmutation, by = c("sample", "POS"), all.x = TRUE) %>% distinct()
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info2 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220908.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info3 <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220830.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- rbind(reference_info, reference_info2, reference_info3) %>% distinct()
reference_info <- reference_info %>% arrange(as_date(coll_date)) %>% mutate(dayssince = as_date(coll_date) - lag(as_date(coll_date), default = first(as_date(coll_date))))
var_file <- merge(variant_data, reference_info, by.x = c("sample"), by.y = c("aliquot_id"), all.x = TRUE)
var_file <- filter(var_file, !is.na(sample) & sample != "")
var_file2 <- var_file %>% group_by(study_id) %>% summarize(i = length(unique(sample)))
var_file <- merge(var_file, var_file2, by = c("study_id"))
View(var_file2)
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
reference_info <- reference_info %>% arrange(as_date(coll_date)) %>% mutate(dayssince = as_date(coll_date) - lag(as_date(coll_date), default = first(as_date(coll_date))))
View(reference_info)
library(shiny)
library(lubridate)
library(tidyverse)
library(nationalparkcolors)
library(reshape2)
library(ggrepel)
variant_data <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220720_SC2_Illumina_Run_58.100.all_variants_filtered", header = TRUE)
variant_data <- filter(variant_data, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
variant_data <- rbind(variant_data, variant_data2)
length(unique(variant_data$sample))
reference_info <- read.csv("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/8_QPCR_IVY/qPCR_Output_IC/uploads/ivyic_upload_20220930.csv") %>% select(study_id, aliquot_id, coll_date)
length(unique(reference_info$aliquot_id))
variant_data2 <- read.table("C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/External_Projects_DataRequests/SARSCOV2/IVYIC_VariantMapping/variant_mapping/20220817_SC2_Illumina_Run_63.100.all_variants_filtered", header = TRUE)
variant_data2 <- filter(variant_data2, !grepl("MHM", sample) & !grepl("Illumina", sample))
View(variant_data2)
###### Report Run ######
########################
## Jules
## Last Updated: 2/7/2021
library(rmarkdown)
rightnow <- as.POSIXct(Sys.time(), format = "%Y-%M-%D %H:%m:%s")
today_day <- weekdays(rightnow)
rightnow_f <- format(rightnow, "%Y%m%d_%H%M")
rightnow_t <- format(rightnow, "%Y%m%d")
# # # if (today_day %in% c("Wednesday", "Monday")){
weekly_name <- paste0("index_", rightnow_t, ".html")
# # #   # #weekly_name <- paste0("index_20220703.html")
render("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/larger_cdc_comm_report.Rmd", output_format = "html_document", output_dir = "C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/", output_file = weekly_name)
render("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/larger_cdc_comm_report.Rmd", output_format = "html_document", output_dir = "C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/", output_file = "index.html")
# # # # }
checking_wd <- getwd()
if (grepl("juliegil", checking_wd)){
starting_path <- "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
#starting_path <- "/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/"
code_path <- "C:/Users/juliegil/Documents/UofM_Work/SequenceCompilationCode/"
#code_path <- "/Users/juliegil/Documents/git_synced_code/SequenceCompilationCode/COVID19SequenceCompile/"
batch_path <- "C:/Users/juliegil/Documents/UofM_Work/Lauring_Lab/Lab_Organization/AlertCode"
#batch_path <- "/Users/juliegil/Documents/LauringLab_Code/AlertCode"
influenza_path <- "C:/Users/juliegil/Documents/UofM_Work/SequenceCompilationCode/InfluenzaACode/"
#influenza_path <- "/Users/juliegil/Documents/git_synced_code/SequenceCompilationCode/COVID19SequenceCompile/InfluenzaACode/"
} else if (grepl("leighbaker", checking_wd)){
starting_path <- "/Users/leighbaker/Dropbox (University of Michigan)/MED-LauringLab/"
code_path <- "/Users/leighbaker/Documents/Lauring_Lab/COVID19SequenceCompile/"
batch_path <- "/Users/leighbaker/Documents/Lauring_Lab/AlertCode"
} else if (grepl("leighbak", checking_wd)){
starting_path <- "/Users/leighbak/Dropbox (University of Michigan)/MED-LauringLab/"
code_path <- "/Users/leighbak/Documents/Lauring_Lab/COVID19SequenceCompile/"
batch_path <- "/Users/leighbak/Documents/Lauring_Lab/AlertCode"
} else {
print("User not recognized.")
}
options(scipen=999)
source(paste0(code_path, "pipeline_functions.R"))
system.time({source(paste0(code_path, "manifest_code.R"))})
system.time({source(paste0(code_path, "plate_map_code.R"))})
system.time({source(paste0(code_path, "compile_components_code.R"))})
system.time({source(paste0(code_path, "compile_components_code.R"))})
###### Report Run ######
########################
## Jules
## Last Updated: 2/7/2021
library(rmarkdown)
rightnow <- as.POSIXct(Sys.time(), format = "%Y-%M-%D %H:%m:%s")
today_day <- weekdays(rightnow)
rightnow_f <- format(rightnow, "%Y%m%d_%H%M")
rightnow_t <- format(rightnow, "%Y%m%d")
################################################################################
###                           Items Run Daily                                ###
################################################################################
# if (today_day %in% c("Wednesday", "Friday")){
#     # run kevin/krista wastewater data refresh
#     source("C:/Users/juliegil/Documents/UofM_Work/ww_app_cares_sewer/PRE_data_processing/create_ww_datasets_per_city_1.R")
#     source("C:/Users/juliegil/Documents/UofM_Work/ww_app_cares_sewer/PRE_data_processing/create_noro_datasets_per_city.R")
#     # run case data to update kevin/krista dashboard
#     source("C:/Users/juliegil/Documents/UofM_Work/ww_app_cares_sewer/PRE_data_processing/run_all_covid_case_sets.R")
# }
#
# # update school/covid/mi data (Tues-Fri)
# if (today_day %in% c("Wednesday", "Monday")){
#
#   source("C:/Users/juliegil/Documents/UofM_Work/school_masking_app/school_masking_data/data_processing_code/data_step.R")
#   shell.exec("C:/Users/juliegil/Documents/UofM_Work/school_refresh/update_git_code.bat")
#
# }
# # # if (today_day %in% c("Wednesday", "Monday")){
#     weekly_name <- paste0("index_", rightnow_t, ".html")
# # #   # #weekly_name <- paste0("index_20220703.html")
#     render("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/larger_cdc_comm_report.Rmd", output_format = "html_document", output_dir = "C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/", output_file = weekly_name)
#     render("C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/larger_cdc_comm_report.Rmd", output_format = "html_document", output_dir = "C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response/Jules/CDC_Comm_Level_Pic/", output_file = "index.html")
# # # # }
# check MISTARTMAP data date(s)
source("C:/Users/juliegil/Documents/UofM_Work/MISTARTMAP/QA_CHECKS/checking_data_date.R")
# run campus pipeline
source("S:/SPHCSTP/Campus COVID Data/current code/pipeline.R")
if (today_day %in% c("Tuesday", "Thursday")){
results_name <- paste0("strain_and_cases_report_code_", gsub("-", "", Sys.Date()), ".html")
render("C:/Users/juliegil/Documents/UofM_Work/Lauring_Lab/Reports/general_reports_sc2/strain_and_cases_report_code.Rmd", output_format = "html_document", output_dir = "C:/Users/juliegil/Dropbox (University of Michigan)/MED-LauringLab/SEQUENCING/SARSCOV2/6_Sequencing_ReportsAndCharts/StrainsVsCases/", output_file = results_name)
}
#lfp <- "/Volumes/SPHStaging/SPHCOVIDBox/Box/COVID Response Modeling"
lfp <- "C:/Users/juliegil/Dropbox (University of Michigan)/SPH-COVID Response"
dataDate <- as.Date("2022-10-11")
################################################################################
# read in case list at this point, to use through the rest of the pipeline
case_data_in <- read.csv(paste0(lfp, "/Data - MDHHS/",gsub("-0","-",format(dataDate,"%y-%m-%d")), "/Confirmed and Probable Covid19 Cases ", dataDate, ".csv"))
if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-1,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-1,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-2,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-2,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-3,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-3,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-4,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-4,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-5,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-5,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-6,"%Y%m%d"),".xlsx"))){
pcr <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-6,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else {
stop("No SEOC testing data available in past 6 days")
}
if(file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate-1,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-1,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results ",format(dataDate-2,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-2,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results ",format(dataDate-3,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-3,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate-4,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-4,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate-5,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-5,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate-6,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0("SEOC Testing Results - Antigen ",format(dataDate-6,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else {
stop("No SEOC Antigen testing data available in past 6 days")
}
file.exists(paste0("SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"))
if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-1,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-1,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-2,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-2,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results ",format(dataDate-3,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-3,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-4,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-4,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-5,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-5,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else if(file.exists(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-6,"%Y%m%d"),".xlsx"))){
antigen <- readxl::read_xlsx(paste0(lfp,"/Data - SEOC/", "SEOC Testing Results - Antigen ",format(dataDate-6,"%Y%m%d"),".xlsx"), sheet = "Without Corrections")
} else {
stop("No SEOC Antigen testing data available in past 6 days")
}
setwd("C:/Users/juliegil/Documents/UofM_Work/wander/wander_plot_community")
